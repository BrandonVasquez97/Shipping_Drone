// <auto-generated />
using System;
using DroneFuture.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DroneFuture.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211010055524_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DroneFuture.App.Dominio.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pEncargadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pEncargadoId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.EstadoPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoDron")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoEmpaque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperaturaZona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoLlegada")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstadoPedidos");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.PaquetePedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoFinalizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Satisfaccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("pEncargadoId")
                        .HasColumnType("int");

                    b.Property<int?>("pEstadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pClienteId");

                    b.HasIndex("pEncargadoId");

                    b.HasIndex("pEstadoId");

                    b.ToTable("PaquetePedidos");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCelular")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.Cliente", b =>
                {
                    b.HasBaseType("DroneFuture.App.Dominio.Persona");

                    b.Property<string>("DireccionEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pEncargadoId")
                        .HasColumnType("int");

                    b.HasIndex("pEncargadoId");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.Encargado", b =>
                {
                    b.HasBaseType("DroneFuture.App.Dominio.Persona");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Encargado");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.Empresa", b =>
                {
                    b.HasOne("DroneFuture.App.Dominio.Encargado", "pEncargado")
                        .WithMany()
                        .HasForeignKey("pEncargadoId");

                    b.Navigation("pEncargado");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.PaquetePedido", b =>
                {
                    b.HasOne("DroneFuture.App.Dominio.Cliente", "pCliente")
                        .WithMany()
                        .HasForeignKey("pClienteId");

                    b.HasOne("DroneFuture.App.Dominio.Encargado", "pEncargado")
                        .WithMany()
                        .HasForeignKey("pEncargadoId");

                    b.HasOne("DroneFuture.App.Dominio.EstadoPedido", "pEstado")
                        .WithMany()
                        .HasForeignKey("pEstadoId");

                    b.Navigation("pCliente");

                    b.Navigation("pEncargado");

                    b.Navigation("pEstado");
                });

            modelBuilder.Entity("DroneFuture.App.Dominio.Cliente", b =>
                {
                    b.HasOne("DroneFuture.App.Dominio.Encargado", "pEncargado")
                        .WithMany()
                        .HasForeignKey("pEncargadoId");

                    b.Navigation("pEncargado");
                });
#pragma warning restore 612, 618
        }
    }
}
